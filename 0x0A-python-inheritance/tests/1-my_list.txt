The ``1-my_list`` module 
=================== 
Using ``print_sorted``
------------- 
Import MyList:
	>>> MyList = __import__('1-my_list').MyList

If MyList inherits from list:
	>>> issubclass(MyList, list)
	True

If List is empty:
	>>> my_list = MyList()
	>>> print(my_list)
	[]

Appened elements to list:
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 3, 5]

Check if sorted:
	>>> my_list.print_sorted()
	[1, 3, 4, 5]

Check what happens after apply function:
	>>> my_list.print_sorted()
	[1, 3, 4, 5]
	>>> print(my_list)
	[1, 4, 3, 5]

If all elements are negative:
	>>> my_list = MyList()
	>>> my_list.append(-1)
        >>> my_list.append(-4)
        >>> my_list.append(-3)
        >>> my_list.append(-5)
        >>> my_list.print_sorted()
	[-5, -4, -3, -1]

If positive and nigative:
        >>> my_list = MyList()
        >>> my_list.append(-1)
        >>> my_list.append(2)
        >>> my_list.append(0)
        >>> my_list.append(-100)
        >>> my_list.print_sorted()
        [-100, -1, 0, 2]

If pass any args on sorted function:
	>>> my_list.print_sorted(1)
	Traceback (most recent call last):
	  ...
	TypeError: print_sorted() takes 1 positional argument but 2 were given

If appended not int:
	>>> my_list.append('a')
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	  ....
	TypeError: unorderable types: str() < int()
