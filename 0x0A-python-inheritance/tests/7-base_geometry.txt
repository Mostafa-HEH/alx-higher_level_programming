=============================
The ``7-base_geometry`` module
=============================

Using ``BaseGeometry``
---------------------

Import the class:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Create instance:
    >>> bg = BaseGeometry()

No raises:
    >>> bg.integer_validator("my_int", 12)

Value is string or other:
    >>> bg.integer_validator("my_int", 'hello')
    Traceback (most recent call last):
      ....
    TypeError: my_int must be an integer

Value is 0 or less:
    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
      ....
    ValueError: my_int must be greater than 0

Pass name only:
    >>> bg.integer_validator("my_int")
    Traceback (most recent call last):
      ....
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Pass no arguments:
    >>> bg.integer_validator()
    Traceback (most recent call last):
      ....
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Area raise Excepection:
    Traceback (most recent call last):
      ....
    Exception: area() is not implemented
